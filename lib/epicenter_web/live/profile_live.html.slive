#profile-page data-page="profile" data-tid=@person.tid data-role="profile-page"

  section
    header#subnav
      = live_redirect "Index cases", to: Routes.people_path(EpicenterWeb.Endpoint, EpicenterWeb.PeopleLive)
      = arrow_right_icon(6, 9)
      span data-role="name" = Format.person(@person)

  section#heading
    div
      h1 data-role="full-name"= Format.person(@person)
      h3#external-id data-role="external-id"= demographic_field(@person, :external_id)

    form id="assignment-form" phx-change="form-change"
      #user-list
        #assignee-label Assignee
        #select-wrapper data-unset=unassigned?(@person)
          = arrow_down_icon()
          select name="user" data-role="users"
            option selected=selected?(nil, @person) value="-unassigned-" Unassigned
            = for user <- @users do
              option selected=selected?(user, @person) value="#{user.id}" #{user.name}

  section#profile
    header
      h2 Profile
      span= live_redirect "Update", to: Routes.profile_edit_path(EpicenterWeb.Endpoint, EpicenterWeb.ProfileEditLive, @person)

    table#profile-data
      tbody
        tr
          th Date of birth
          th Preferred language
          th Phone
          th Email
        tr
          td data-role="date-of-birth"= string_or_unknown(with(dob when not is_nil(dob) <- demographic_field(@person, :dob), do: Format.date(dob)))
          td data-role="preferred-language"= string_or_unknown(demographic_field(@person, :preferred_language))
          td data-role="phone-numbers"= list_or_unknown(phone_numbers(@person))
          td data-role="email-addresses"= list_or_unknown(email_addresses(@person))
      tbody
        tr
          th colspan=4 Address
        tr
          td colspan=4 data-role="addresses"
            = if Euclid.Exists.present?(@person.addresses) do
              = for address <- @person.addresses do
                div class="address-details" data-role="address-details"
                  div = Format.address(address)
            - else
              = unknown_value()

  a#case-investigations
  = for case_investigation <- @case_investigations do
    section.case-investigation
      header data-role="case-investigation-title"
        h2= "Case investigation #{case_investigation.name}"

      .reported-on data-role="reported-on"
        span
          = "Initiated by positive lab result reported on "
          = string_or_unknown(Format.date(case_investigation.initiating_lab_result.reported_on))

      .case-investigation-interview-status
        h3.status data-role="status"
          = displayable_interview_status(case_investigation)
        .links
          = for link <- interview_buttons(case_investigation) do
            span= link

      .case-investigation-history
        = for history_item <- history_items(case_investigation) do
          div
            span data-role="case-investigation-history-item-text" = history_item.text
            span class="history-item-link" = history_item.link

      = if case_investigation.started_at != nil do
        .case-investigation-clinical
          .clinical-details-header-row
            h4
              span id="clinical-details-#{case_investigation.name}"
                | Clinical
            .links
              span= live_redirect "Edit", to: Routes.case_investigation_clinical_details_path(EpicenterWeb.Endpoint, EpicenterWeb.CaseInvestigationClinicalDetailsLive, case_investigation) , id: "case-investigation-clinical-details-link-001", class: "case-investigation-clinical-details-link"

          table.clinical-data data-role="clinical-data-table"
            thead
              tr data-role="table-column-names"
                th Clinical status
                th Onset date
                th Symptoms

            tbody
              tr data-tid=case_investigation.tid
                td data-role="case-investigation-clinical-status-text"
                  = displayable_clinical_status(case_investigation)
                td data-role="case-investigation-symptom-onset-date-text"
                  = displayable_symptom_onset_date(case_investigation)
                td data-role="case-investigation-symptoms-text"
                  = displayable_symptoms(case_investigation)
        .case-investigation-contacts id="contacts-#{case_investigation.name}"
          .contacts-header-row
            h4
              span
                | Contacts
            div
              = live_redirect "+ Contact", to: Routes.create_case_investigation_contact_path(EpicenterWeb.Endpoint, EpicenterWeb.CaseInvestigationContactLive, case_investigation) , id: "add-contact-case-investigation-link-001", class: "add-contact-case-investigation-link"
          = for exposure <- case_investigation.exposures do
            .contact
              .contact-details
                .contact-name = Format.person(exposure.exposed_person)
                = contact_details_as_list(exposure)
              div
                = live_redirect "Edit", to: Routes.edit_case_investigation_contact_path(EpicenterWeb.Endpoint, EpicenterWeb.CaseInvestigationContactLive, case_investigation, exposure) , data: [role: "edit-contact", exposure: exposure.id]
                span=" "
                a href="#" data-confirm="Remove #{Format.person(exposure.exposed_person)} as a contact?" phx-click="remove-contact" phx-value-exposure-id=exposure.id data-role="remove-contact" Remove

      = if CaseInvestigation.status(case_investigation) == :completed_interview do
        .case-investigation-isolation-monitoring-status id="isolation-monitoring-#{case_investigation.name}"
          h3.status data-role="status"
            = displayable_isolation_monitoring_status(case_investigation, @current_date)
          div
            = isolation_monitoring_button(case_investigation)
        .case-investigation-history
          = for item <- isolation_monitoring_history_items(case_investigation) do
            div
              span data-role="isolation-monitoring-history-item-text" = item.text
              span class="history-item-link" = item.link

      .case-investigation-notes
        h3.additional_notes Additional Notes
        = form_for @note_changesets[case_investigation.id], "#", [id: "case-investigation-add-note-form-#{case_investigation.name}", phx_submit: "save_note"], fn f ->
              = add_note_form_builder(f, case_investigation)
        = for note <- case_investigation.notes do
          div.case-investigation-note data-role="case-investigation-note-#{case_investigation.name}"
            div.case-investigation-note-header
              span.case-investigation-note-author data-role="case-investigation-note-author" = note.author.name
              span data-role="case-investigation-note-date" = Format.date(note.inserted_at)
            div.case-investigation-note-text data-role="case-investigation-note-text" = note.text



  section#lab-results data-role="lab-results"
    header
      h2 Lab Results

    = if Euclid.Exists.blank?(@person.lab_results) do
      div#empty-lab-results No lab results

    - else
      table#lab-results-data data-role="lab-result-table"
        thead
          tr data-role="table-column-names"
            th Collection
            th Result
            th Ordering Facility
            th Analysis
            th Reported
            th Type

        tbody
          = for lab_result <- @person.lab_results do
            tr data-tid=lab_result.tid
              td= string_or_unknown(Format.date(lab_result.sampled_on))
              td= string_or_unknown(lab_result.result)
              td= string_or_unknown(lab_result.request_facility_name)
              td= string_or_unknown(Format.date(lab_result.analyzed_on))
              td= string_or_unknown(Format.date(lab_result.reported_on))
              td= string_or_unknown(lab_result.test_type)

  section#demographics
    header
      h2 Demographics
      span= live_redirect "Update", to: Routes.demographics_edit_path(EpicenterWeb.Endpoint, EpicenterWeb.DemographicsEditLive, @person)

    table#demographics-data
      tbody
        tr
          th Gender identity
          th Sex at birth
          th Ethnicity
          th Race
        tr
          td data-role="gender-identity"= @person |> demographic_field(:gender_identity, :format) |> list_or_unknown()
          td data-role="sex-at-birth"= @person |> demographic_field(:sex_at_birth, :format) |> string_or_unknown()
          td data-role="ethnicity"= @person |> demographic_field(:ethnicity, :format) |> list_or_unknown()
          td data-role="race"= @person |> demographic_field(:race, :format) |> string_or_unknown()
      tbody
        tr
          th Marital status
          th Employment
          th Occupation
        tr
          td data-role="marital-status"= @person |> demographic_field(:marital_status, :format) |> string_or_unknown()
          td data-role="employment"= @person |> demographic_field(:employment, :format) |> string_or_unknown()
          td data-role="occupation"= @person |> demographic_field(:occupation) |> string_or_unknown()
      tbody
        tr
          th Notes
        tr
          td data-role="notes"= @person |> demographic_field(:notes) |> string_or_unknown("--")
