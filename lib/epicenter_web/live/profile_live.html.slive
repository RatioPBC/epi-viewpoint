#profile-page data-page="profile" data-tid=@person.tid data-role="profile-page"

  section
    header#subnav
      = live_redirect "Index cases", to: Routes.people_path(EpicenterWeb.Endpoint, EpicenterWeb.PeopleLive)
      = arrow_right_icon(6, 9)
      span data-role="name" = Format.person(@person)

  section#heading
    div
      h1 data-role="full-name"= Format.person(@person)
      h3#external-id data-role="external-id"= demographic_field(@person, :external_id)

    form id="assignment-form" phx-change="form-change"
      #user-list
        #assignee-label Assignee
        #select-wrapper data-unset=unassigned?(@person)
          = arrow_down_icon()
          select name="user" data-role="users"
            option selected=selected?(nil, @person) value="-unassigned-" Unassigned
            = for user <- @users do
              option selected=selected?(user, @person) value="#{user.id}" #{user.name}


  section#profile
    header
      h2 Profile
      span= live_redirect "Update", to: Routes.profile_edit_path(EpicenterWeb.Endpoint, EpicenterWeb.ProfileEditLive, @person)

    table#profile-data
      tbody
        tr
          th Date of birth
          th Preferred language
          th Phone
          th Email
        tr
          td data-role="date-of-birth"= Format.date(demographic_field(@person, :dob))
          td data-role="preferred-language"= string_or_unknown(demographic_field(@person, :preferred_language))
          td data-role="phone-numbers"= list_or_unknown(phone_numbers(@person))
          td data-role="email-addresses"= list_or_unknown(email_addresses(@person))
      tbody
        tr
          th colspan=4 Address
        tr
          td colspan=4 data-role="addresses"
            = if Euclid.Exists.present?(@person.addresses) do
              = for address <- @person.addresses do
                div class="address-details" data-role="address-details"
                  div = Format.address(address)
            - else
              = unknown_value()

  = for case_investigation <- @case_investigations do
    section.case-investigation
      header data-role="case-investigation-title"
        h2= "Case investigation #{case_investigation.name}"

      .reported-on data-role="reported-on"
        span
          = "Initiated by positive lab result reported on "
          = string_or_unknown(Format.date(case_investigation.initiated_by.reported_on))

      .case-investigation-status
        h3.status data-role="status"
          span class="status-value"
            = "Pending"
          = " interview"
        .links
          span= live_redirect "Start interview", to: Routes.case_investigation_start_path(EpicenterWeb.Endpoint, EpicenterWeb.CaseInvestigationStartLive, @person), id: "start-case-investigation-link-001", class: "start-case-investigation-link"
          span= live_redirect "Discontinue", to: Routes.case_investigation_discontinue_path(EpicenterWeb.Endpoint, EpicenterWeb.CaseInvestigationDiscontinueLive, @person, case_investigation), id: "discontinue-case-investigation-link-001", class: "discontinue-case-investigation-link"

  section#lab-results data-role="lab-results"
    header
      h2 Lab Results

    = if Euclid.Exists.blank?(@person.lab_results) do
      div#empty-lab-results No lab results

    - else
      table#lab-results-data data-role="lab-result-table"
        thead
          tr data-role="table-column-names"
            th Collection
            th Result
            th Ordering Facility
            th Analysis
            th Reported
            th Type

        tbody
          = for lab_result <- @person.lab_results do
            tr data-tid=lab_result.tid
              td= string_or_unknown(Format.date(lab_result.sampled_on))
              td= string_or_unknown(lab_result.result)
              td= string_or_unknown(lab_result.request_facility_name)
              td= string_or_unknown(Format.date(lab_result.analyzed_on))
              td= string_or_unknown(Format.date(lab_result.reported_on))
              td= string_or_unknown(lab_result.test_type)

  section#demographics
    header
      h2 Demographics

    table#demographics-data
      tbody
        tr
          th Gender identity
          th Sex at birth
          th Ethnicity
          th Race
        tr
          td data-role="gender-identity"= demographic_field(@person, :gender_identity)
          td data-role="sex-at-birth"= demographic_field(@person, :sex_at_birth)
          td
            div data-role="major-ethnicity"= ethnicity_value(@person)
            ul
              = for detailed_ethnicity <- detailed_ethnicities(@person) do
                li data-role="detailed-ethnicity"= detailed_ethnicity_value(detailed_ethnicity)
          td data-role="race"= demographic_field(@person, :race)
      tbody
        tr
          th Marital status
          th Employment
          th Occupation
        tr
          td data-role="marital-status"= string_or_unknown(Format.marital_status(demographic_field(@person, :marital_status)))
          td data-role="employment"= string_or_unknown(Format.employment(demographic_field(@person, :employment)))
          td data-role="occupation"= demographic_field(@person, :occupation)
      tbody
        tr
          th Notes
        tr
          td data-role="notes"= demographic_field(@person, :notes)
