image: circleci/elixir:1.10.4-node-browsers
services:
  - postgres:12.2-alpine
variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  POSTGRES_DB: epicenter_test
  POSTGRES_HOST: postgres
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
stages:
  - test
  - deploy
cache:
  key:
    files:
      - mix.lock
      - assets/package-lock.json
    prefix: v1
  paths:
    - deps
    - assets/node_modules
test:
  before_script:
    - npm install --prefix assets
    - mix local.rebar --force
    - mix local.hex --force
    - mix hex.organization auth geometer --key "$HEX_GEOMETER_READ_ONLY_KEY"
    - mix deps.get
    - mix deps.unlock --check-unused
    - mix deps.audit
    - npm audit --audit-level=moderate --prefix assets
  stage: test
  script:
    - bin/dev/test
  variables:
    MIX_ENV: test

deploy_staging:
  only:
    - kube-deploy
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - bin/remote/deploy staging
  environment:
    name: staging
    url: https://viewpoint-staging.network.geometer.dev

deploy_construction:
  only:
    - kube-deploy
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - bin/remote/deploy construction
  environment:
    name: construction
    url: https://viewpoint-construction.network.geometer.dev

deploy_demo:
  only:
    - kube-deploy
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - bin/remote/deploy demo
  environment:
    name: demo
    url: https://viewpoint-demo.network.geometer.dev
  when: manual
