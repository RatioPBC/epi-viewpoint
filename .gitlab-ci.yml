image: circleci/elixir:1.11.3-node-browsers
services:
  - postgres:12.5-alpine
variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  POSTGRES_DB: epicenter_test
  POSTGRES_HOST: postgres
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
stages:
  - test
  - deploy
before_script:
  - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
test:
  cache:
    key:
      files:
        - mix.lock
        - assets/package-lock.json
      prefix: v1
    paths:
      - deps
      - assets/node_modules
      - _build
  before_script:
    - npm install --prefix assets
    - mix local.rebar --force
    - mix local.hex --force
    - mix deps.get
    - mix deps.unlock --check-unused
    - mix deps.audit
    - npm audit --audit-level=moderate --prefix assets
    - mix sobelow --config
  stage: test
  script:
    - bin/dev/test
  variables:
    MIX_ENV: test
build_image:
  stage: test
  only:
    - main
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - bin/docker/build
deploy_staging:
  only:
    - main
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA epicenter:latest
    - bin/remote/deploy staging
  resource_group: staging
  environment:
    name: staging
    url: https://viewpoint.staging.gsi.dev
deploy_construction:
  only:
    - main
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA epicenter:latest
    - bin/remote/deploy construction
  resource_group: construction
  environment:
    name: construction
    url: https://viewpoint.construction.gsi.dev
  when: manual
deploy_demo:
  only:
    - main
  stage: deploy
  image: geometer/docker-gcp:latest
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA epicenter:latest
    - bin/remote/deploy demo
  resource_group: demo
  environment:
    name: demo
    url: https://viewpoint.demo.gsi.dev
  when: manual
deploy_heroku:
  only:
    - main
  stage: deploy
  script:
    - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_STAGING.git || true
    - git push -f heroku HEAD:master
  when: manual
